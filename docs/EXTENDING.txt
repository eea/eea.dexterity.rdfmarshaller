A guide on how to extend eea.dexterity.rdfmarshaller
==========================================

The rdf marshaller is registered as a marshaller component for the
Products.Marshaller utilities.

There are 2 marshalling components registerd with Products.Marshaller:
the surfrdf and surfrdfs component.

To achieve the rdf marshalling, the class
```eea.dexterity.rdfmarshaller.RDFMarshaller``` will
look for a multiadapter implementing ```IObject2Surf``` and adapts
the context+ISurfSession. This adapter needs to write its rdf information
in the ISurfSession object by calling it's ```write``` method.

A generic implementation for an IObject2Surf adapter is written as the class
```eea.dexterity.rdfmarshaller.marshaller.GenericObject2Surf```. This generic
class offers splits its namespace, prefix, subject and initial rdf resource
generation in separate methods, so they can be overrided. Of interest if the
implementation of the ```write``` method, which offers 2 plugin points. First,
it will call the ```self.modify_resource``` method, which does nothing in the
GenericObject2Surf implementation and can be overrided by subclasses. Second,
it will look for subscribers for the ISurfResourceModifier interface and call
those with the resource as an argument, making it possible to change that
resource from outside packages.

Basic examples of how to use the GenericObject2Surf class are in the
marshaller.py module, showing implementation for various portal utilities.


Extending through the use of modifiers
--------------------------------------

A new mechanism for extending the surf resource was introduced, in the form of
ISurfResourceModifier subscribers that are allowed to change the surf
resource. This mechanism allows arbitrary plugins to be written in any package
and extend, very easily, the output of @@rdf. For pointers on how to implement
such modifiers, look at the source code in
eea.dexterity.rdfmarshaller.archetypes.modifiers
